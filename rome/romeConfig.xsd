<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
	<xs:annotation>
		<xs:documentation>Schema for a ROME configuration file.</xs:documentation>
	</xs:annotation>
	<xs:simpleType name="AnalyzingModeType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="online"/>
			<xs:enumeration value="offline"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="DAQSystemType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="root"/>
			<xs:enumeration value="midas"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="DataBaseType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="none"/>
			<xs:enumeration value="xml"/>
			<xs:enumeration value="sql"/>
			<xs:enumeration value="text"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="RunParametersDesc">
		<xs:annotation>
			<xs:documentation>Description of the run parameters.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="RunNumbers" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The run numbers of runs, which have to be analyzed. The following syntax must be used : 1,3-5,7,9-12. All runs must be specified in the 'MainConfiguration' even if they are overriden by a 'RunConfiguration'. (required for offline)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="EventNumbers" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The event numbers, which have to be analyzed. Use the same syntax as for the run numbers. (optional)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InputFileNames" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The input file names containing the runs, which have to be analyzed. If no input file is specified the DAQ systems will work with a run number based file IO. All files must be specified in the 'MainConfiguration' even if they are overriden by a 'RunConfiguration'. (optional)</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ModesDesc">
		<xs:annotation>
			<xs:documentation>Description of the modes in which the framework can run.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="AnalyzingMode" type="AnalyzingModeType" default="offline">
				<xs:annotation>
					<xs:documentation>Describes the analyzing mode. This can be 'online' or 'offline'. Default is offline</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DAQSystem" type="xs:string" default="none">
				<xs:annotation>
					<xs:documentation>Describes the DAQ system used for IO. This can be 'none', 'midas', 'root' or a user defined DAQ system. Default is none.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VerboseLevel" type="xs:string" default="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Specify amount of messages from framework. mute, error, warning, normal or debug. default is normal.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ConfigCommentLevel" type="xs:string" default="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Amount of comments in configuration xml file. 0 to 5. You have more comments when this is larger. degault is 1.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="QuitMode" type="xs:boolean" default="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>If true, the program doesn't start a root session at the end. Default is false.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ShowSplashScreen" type="xs:boolean" default="true" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Program shows a splash screen, when starting up. Default is true.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GraphicalConfigEdit" type="xs:boolean" default="true" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Configuration file can be modified in a GUI at start up.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PreserveConfig" type="xs:boolean" default="true" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Flag if configuration XML file is overwritten by program. When this is true, program does not overwrite configuration file.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="AnalyzerControllerDesc">
		<xs:annotation>
			<xs:documentation>Description of the Analyzer Contoller Settings.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Active" type="xs:boolean">
				<xs:annotation>
					<xs:documentation>Activate flag.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NetFolderName" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Name of the NetFolder to steer the analysis.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SocketToROMEDesc">
		<xs:annotation>
			<xs:documentation>Description of the socket interface to the ROME analyzer. This section is needed if the ARGUS display should connect to a ROME analyzer of the current project..</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Active" type="xs:boolean">
				<xs:annotation>
					<xs:documentation>Activate flag.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Host" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Host which runs the ROME analyzer.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Port" type="xs:integer" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Port number for the socket connection.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ArgusDesc">
		<xs:annotation>
			<xs:documentation>Describes the argus specific properties.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="WindowScale" type="xs:float" default="1.0" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Basic size of main window.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StatusBar" type="xs:boolean" default="true" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Display a status bar in the window.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UpdateFrequency" type="xs:integer" default="0" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Time intervall after which the EventHandler method is called in milli seconds. 0 means no update. Default is 0.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AnalyzerController" type="AnalyzerControllerDesc" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Description of the Analyzer Contoller Settings.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SocketToROME" type="SocketToROMEDesc" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Description of the socket interface to the ROME analyzer. This section is needed if the ARGUS display should connect to a ROME analyzer of the current project.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DataBaseDesc">
		<xs:annotation>
			<xs:documentation>Describes a data base, to which the framework should be connected.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Name" type="xs:string">
				<xs:annotation>
					<xs:documentation>The name of the data base connection. (required)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Connection" type="xs:string">
				<xs:annotation>
					<xs:documentation>The connection string to initialize the database. For xml: "path;databasename". For sql: "mysql://username:password@servername:portnumber/databasename". For text: "your/database/directory". (required)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Type" type="xs:string">
				<xs:annotation>
					<xs:documentation>The type of the data base. (required)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="EventBased" type="xs:string" default="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>If this is true the database gets read at each event. The '#' in the path means then event number. Default is false. (optional)</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DataBasesDesc">
		<xs:annotation>
			<xs:documentation>Defines the data bases, which the analysis accesses.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="DataBase" type="DataBaseDesc" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Description of a data base, to which the framework should be connected. (optional)</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="OnlineDesc">
		<xs:annotation>
			<xs:documentation>Description of the online specific configuration.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Host" type="xs:string">
				<xs:annotation>
					<xs:documentation>The name of the host of the online experiment. (required)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Experiment" type="xs:string">
				<xs:annotation>
					<xs:documentation>The name of the online experiment. (required)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AnalyzerName" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The name of the analyzer in the midas environment. Can be used to run two analyzer in parallel. (optional)</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SocketInterfaceDesc">
		<xs:annotation>
			<xs:documentation>Description of the socket interface. External programs can access the objects inside the framework over a root socket interface.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="PortNumber" type="xs:integer" default="9090" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The number of the port for the socket interface. Default is 9090.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AvailableOffline" type="xs:boolean" default="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The socket interface is per default not available in offline mode. This flag makes it available also offline. Default is false.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PathsDesc">
		<xs:annotation>
			<xs:documentation>Description of the file paths the framework is using.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="InputFilePath" type="xs:string">
				<xs:annotation>
					<xs:documentation>The path of all input files. (required)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="OutputFilePath" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The path of all output files. (optional)</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="HistogramReadDesc">
		<xs:annotation>
			<xs:documentation>Description of the histogram/graph reading.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Read" type="xs:boolean">
				<xs:annotation>
					<xs:documentation>Read flag. (required)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RunNumber" type="xs:integer">
				<xs:annotation>
					<xs:documentation>Run number of the required histogram/graph file. (required)</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="HistogramDesc">
		<xs:annotation>
			<xs:documentation>Description of the histogram configuration.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="HistName" type="xs:string">
				<xs:annotation>
					<xs:documentation>The name of the histogram. (required)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HistTitle" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The title of the histogram. Displayed in the ROOT browser. This value overwrites the value specified in the definition file. (optional)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HistFolderTitle" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The title of the ROOT folder in which the histogram is stored. This value overwrites the value specified in the definition file. (optional)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HistArraySize" type="xs:string" default="1" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The array size of the histogram. This value will be ignord if the histogram is not declared as an array in the ROME definition file. The histograms are named HistName_001 and so on. With HistArrayStartIndex you can specifie with which number the enumeration starts. This value overwrites the value specified in the definition file. Default is 1.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HistArrayStartIndex" type="xs:integer" default="0" minOccurs="0">
				<xs:annotation>
					<xs:documentation> Start index of histogram array name enumeration. This value overwrites the value specified in the definition file. Default is 0.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HistXLabel" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The label text of the x axis. Text has to be placed in quotes. This value overwrites the value specified in the definition file. (optional)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HistYLabel" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The label text of the y axis. Text has to be placed in quotes. This value overwrites the value specified in the definition file. (optional)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HistZLabel" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The label text of the z axis. Text has to be placed in quotes. This value overwrites the value specified in the definition file. (optional)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HistXNbins" type="xs:integer" default="1" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The number of bins in x. This value overwrites the value specified in the definition file. Default is 1.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HistXmin" type="xs:double" default="0" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The minimum value in x. This value overwrites the value specified in the definition file. Default is 0.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HistXmax" type="xs:double" default="1" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The maximum value in x. This value overwrites the value specified in the definition file. Default is 1.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HistYNbins" type="xs:integer" default="1" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The number of bins in y. This value overwrites the value specified in the definition file. Default is 1.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HistYmin" type="xs:double" default="0" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The minimum value in y. This value overwrites the value specified in the definition file. Default is 0.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HistYmax" type="xs:double" default="1" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The maximum value in y. This value overwrites the value specified in the definition file. Default is 1.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HistZNbins" type="xs:integer" default="1" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The number of bins in z. This value overwrites the value specified in the definition file. Default is 1.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HistZmin" type="xs:double" default="0" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The minimum value in z. This value overwrites the value specified in the definition file. Default is 0.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HistZmax" type="xs:double" default="1" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The maximum value in z. This value overwrites the value specified in the definition file. Default is 1.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HistAccumulate" type="xs:boolean" default="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>If this value is true the histograms content will be accumulated over all runs. Default is false.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="GraphDesc">
		<xs:annotation>
			<xs:documentation>Description of the graph configuration.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="GraphName" type="xs:string">
				<xs:annotation>
					<xs:documentation>The name of the graph. (required)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GraphTitle" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The title of the graph. Displayed in the ROOT browser. This value overwrites the value specified in the definition file. (optional)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GraphFolderTitle" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The title of the ROOT folder in which the graph is stored. This value overwrites the value specified in the definition file. (optional)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GraphArraySize" type="xs:string" default="1" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The array size of the graph. This value will be ignord if the graph is not declared as an array in the ROME definition file. The histograms are named HistName_001 and so on. With HistArrayStartIndex you can specifie with which number the enumeration starts. This value overwrites the value specified in the definition file. Default is 1.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GraphArrayStartIndex" type="xs:integer" default="0" minOccurs="0">
				<xs:annotation>
					<xs:documentation> Start index of graph array name enumeration. This value overwrites the value specified in the definition file. Default is 0.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GraphXLabel" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The label text of the x axis. Text has to be placed in quotes. This value overwrites the value specified in the definition file. (optional)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GraphYLabel" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The label text of the y axis. Text has to be placed in quotes. This value overwrites the value specified in the definition file. (optional)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GraphZLabel" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The label text of the z axis. Text has to be placed in quotes. This value overwrites the value specified in the definition file. (optional)</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SteeringParameterFieldArrayDesc">
		<xs:annotation>
			<xs:documentation>Description of an array value of the steering parameter field.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="SPFieldArrayIndex" type="xs:integer">
				<xs:annotation>
					<xs:documentation>The index of the value of a steering parameter field array. (required)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SPFieldArrayValue" type="xs:string">
				<xs:annotation>
					<xs:documentation>The value of the steering parameter field array. (required)</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="MacrosDesc">
		<xs:annotation>
			<xs:documentation>Description of macros.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="BeginOfRun" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Macro file name which is executed at the begin of run. It is executed after Tasks::BeginOfRun. (optional)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BeginOfEvent" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Macro file name which is executed at the begin of event. It is executed before Tasks::Event. (optional)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="EndOfEvent" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Macro file name which is executed at the end of event. It is executed after Tasks::Event. (optional)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="EndOfRun" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Macro file name which is executed at the end of run. It is executed after Tasks::EndOfRun. (optional)</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SteeringParameterGroupArrayDesc">
		<xs:annotation>
			<xs:documentation>Description of an array group of the steering parameter group.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="SPGroupArrayIndex" type="xs:integer">
				<xs:annotation>
					<xs:documentation>The index of the group of a steering parameter group array. (required)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SteeringParameterField" type="SteeringParameterFieldDesc" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Describes a steering parameter field of the steering parameter group array. (required)</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SteeringParameterFieldDesc">
		<xs:annotation>
			<xs:documentation>Description of the steering parameter fields.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="SPName" type="xs:string">
				<xs:annotation>
					<xs:documentation>The name of the steering parameter field. (required)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SPValue" type="xs:string" default="0" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The value of the steering parameter field. (required for single values)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SPFieldArray" type="SteeringParameterFieldArrayDesc" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Describes an array value of the steering parameter field. (required for array values)</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SteeringParameterGroupDesc">
		<xs:annotation>
			<xs:documentation>Description of the steering parameter groups.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="SPGroupName" type="xs:string">
				<xs:annotation>
					<xs:documentation>The name of the steering parameter group. (required)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SPGroupArray" type="SteeringParameterGroupArrayDesc" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Describes an array group of the steering parameter group. (required for array groups)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SteeringParameterField" type="SteeringParameterFieldDesc" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Describes a steering parameter field. (optional)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SteeringParameterGroup" type="SteeringParameterGroupDesc" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Describes a steering parameter group. (optional)</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="FieldDesc">
		<xs:annotation>
			<xs:documentation>Description of a field of a folder.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="FieldName" type="xs:string">
				<xs:annotation>
					<xs:documentation>The name of the field. (required)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DataBaseName" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The name of the database from which to read the field value. This value overwrites the value specified in the definition file. (optional)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DataBasePath" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The path to the value in the database. This value overwrites the value specified in the definition file. (optional)</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="FolderDesc">
		<xs:annotation>
			<xs:documentation>Description of the folder configuration.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="FolderName" type="xs:string">
				<xs:annotation>
					<xs:documentation>The name of the folder. (required)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Field" type="FieldDesc" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Describes a field of a folder. (optional)</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="NetFolderDesc">
		<xs:annotation>
			<xs:documentation>Description of the NetFolder configuration.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="NetFolderName" type="xs:string">
				<xs:annotation>
					<xs:documentation>The name of the NetFolder. (required)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Active" type="xs:boolean">
				<xs:annotation>
					<xs:documentation>Activate flag.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Reconnect" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>If true, the framework tries to reconnect if the connection is lost. (optional)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Host" type="xs:string">
				<xs:annotation>
					<xs:documentation>The host of the NetFolder.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Port" type="xs:integer">
				<xs:annotation>
					<xs:documentation>The port for the connection</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Root" type="xs:string">
				<xs:annotation>
					<xs:documentation>The host's root folder.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TaskDesc">
		<xs:annotation>
			<xs:documentation>Description of the task configuration.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="TaskName" type="xs:string">
				<xs:annotation>
					<xs:documentation>The name of the task. (required)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Active" type="xs:boolean" default="true">
				<xs:annotation>
					<xs:documentation>Inactive tasks are not executed by the framework. Default is true.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Histogram" type="HistogramDesc" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Describes a histogram configuration. (optional)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Graph" type="GraphDesc" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Describes a graph configuration. (optional)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SteeringParameterField" type="SteeringParameterFieldDesc" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Describes a steering parameter field of a task. (optional)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SteeringParameterGroup" type="SteeringParameterGroupDesc" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Describes a steering parameter group of a task. (optional)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Task" type="TaskDesc" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Describes a sub-task. (optional)</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ObjectDisplayDesc">
		<xs:annotation>
			<xs:documentation>Description of an object display.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ObjectDisplayName" type="xs:string">
				<xs:annotation>
					<xs:documentation>The name of the object display. (required)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DrawOption" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The root draw option. (optional)</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TabDesc">
		<xs:annotation>
			<xs:documentation>Description of the tab configuration.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="TabName" type="xs:string">
				<xs:annotation>
					<xs:documentation>The name of the tab.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Active" type="xs:boolean">
				<xs:annotation>
					<xs:documentation>Inactive tasks are not executed by the framework.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NumberOfPadsX" type="xs:integer" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The initial number of pads in horizontal direction. This tag is only used for tabs with display objects.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NumberOfPadsY" type="xs:integer" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The initial number of pads in vertical direction. This tag is only used for tabs with display objects.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PadConfiguration" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Tells the tab to activate the pad configuration. This tag is only used for tabs with display objects.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SteeringParameterField" type="SteeringParameterFieldDesc" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Describes a steering parameter field of a task.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SteeringParameterGroup" type="SteeringParameterGroupDesc" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Describes a steering parameter group of a task.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Tab" type="TabDesc" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Describes a sub-tab.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ObjectDisplay" type="ObjectDisplayDesc" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Describes an object display.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="BranchDesc">
		<xs:annotation>
			<xs:documentation>Description of a branch.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="BranchName" type="xs:string">
				<xs:annotation>
					<xs:documentation>The name of the branch. (required)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Active" type="xs:boolean" default="true" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Inactive branches are not filled by the framework. (optional)</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TreeDesc">
		<xs:annotation>
			<xs:documentation>Description of the tree configuration.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="TreeName" type="xs:string">
				<xs:annotation>
					<xs:documentation>The name of the tree. (required)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Read" type="xs:boolean" default="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Trees can be read into the framework to start the analysis from a previously saved state. Default is false.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Write" type="xs:boolean" default="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Trees are written to disc. Default is false.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Fill" type="xs:boolean" default="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Trees are filled. It will be changed to true when 'Write' is true. Default is false.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CompressionLevel" type="xs:integer" default="0" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Compression level for all branches of the tree. Default is 0.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MaxNumberOfEntries" type="xs:integer" default="0" minOccurs="0">
				<xs:annotation>
					<xs:documentation>If this value is greater than 0 the tree is a circular tree with the specified size. Default is 0.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TreeOutputFileName" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The name of the trees output file. This value overwrites the value specified in the definition file. (optional)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SaveConfiguration" type="xs:boolean" default="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>If this is true, content of configuration XML file would be saved in the output file. Default is false</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Branch" type="BranchDesc" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Describes a branch. (optional)</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="BankDesc">
		<xs:annotation>
			<xs:documentation>Description of a midas bank.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="BankName" type="xs:string">
				<xs:annotation>
					<xs:documentation>The name of the bank. (required)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Active" type="xs:boolean" default="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>If true, this bank will be analyzed. Default is false.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="EventDesc">
		<xs:annotation>
			<xs:documentation>Description of a midas event.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="EventName" type="xs:string">
				<xs:annotation>
					<xs:documentation>The name of the event. (required)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Active" type="xs:boolean" default="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>If true, this event type will be analyzed. Default is false.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Bank" type="BankDesc" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Describes a midas bank. (optional)</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ROMEDesc">
		<xs:annotation>
			<xs:documentation>Description of the ROME settings.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Active" type="xs:boolean" default="true" minOccurs="0">
				<xs:annotation>
					<xs:documentation>If true, the progam will be an analyzer. Default is true.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ARGUSDesc">
		<xs:annotation>
			<xs:documentation>Description of the ARGUSsettings.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Active" type="xs:boolean" default="true" minOccurs="0">
				<xs:annotation>
					<xs:documentation>If true, the progam will be a monitor. Default is true.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ProgramConfigurationDesc">
		<xs:annotation>
			<xs:documentation>Description of the program configuration.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ROME" type="ROMEDesc" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The ROME settings. (required)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ARGUS" type="ARGUSDesc" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The ARGUS settings. (required)</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ConfigurationDesc">
		<xs:annotation>
			<xs:documentation>Description of the configuration.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="RunParameters" type="RunParametersDesc" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Describes the run parameters. (optional)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Modes" type="ModesDesc" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Describes the modes in which the framework can run. (optional)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Argus" type="ArgusDesc" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Describes the argus specific properties.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DataBases" type="DataBasesDesc" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Definition of the data bases, which the analysis accesses. (optional)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Online" type="OnlineDesc" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Describes the online specific configuration. (optional)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SocketInterface" type="SocketInterfaceDesc" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Describes the socket interface. (optional)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Paths" type="PathsDesc" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Describes the file paths the framework is using. (required)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HistogramRead" type="HistogramReadDesc" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Describes the histogram/graph reading. (optional)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Folders" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Describes the folders in the framework.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Folder" type="FolderDesc" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Describes the folder configuration. (optional)</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="NetFolders" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Describes the NetFolders in the framework.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="NetFolder" type="NetFolderDesc" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Describes the NetFolder configuration. (optional)</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Macros" type="MacrosDesc" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Describes the macross in which the framework can run. (optional)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Tasks" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Describes the tasks in the framework.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Task" type="TaskDesc" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Describes the task configuration. (optional)</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Tabs" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Describes the tabs.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Tab" type="TabDesc" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Describes the tab configuration.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Trees" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Describes the trees in the framework.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Accumulate" type="xs:boolean" default="false" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Trees can be accumulated over certain runs. Default is false.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Tree" type="TreeDesc" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Describes the tree configuration. (optional)</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="GlobalSteeringParameters" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Describes the global steering parameters configuration.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="SteeringParameterField" type="SteeringParameterFieldDesc" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Describes a steering parameter field. (optional)</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="SteeringParameterGroup" type="SteeringParameterGroupDesc" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Describes a steering parameter group. (optional)</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Midas" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Describes the midas dependent part of the framework.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="MidasByteSwap" type="xs:boolean" minOccurs="0">
							<xs:annotation>
								<xs:documentation>When it is true, framework does byte swapping when reading MIDAS files. Default is false.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Event" type="EventDesc" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Describes a midas event. (optional)</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="Configuration">
		<xs:annotation>
			<xs:documentation>Configuration of a ROME Framework.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="ProgramConfiguration" type="ProgramConfigurationDesc" minOccurs="0">
					<xs:annotation>
						<xs:documentation>Describes the program configuration. (required)</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="MainConfiguration" type="ConfigurationDesc">
					<xs:annotation>
						<xs:documentation>Describes the main framework configuration. (required)</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="RunConfiguration" type="ConfigurationDesc" minOccurs="0" maxOccurs="unbounded">
					<xs:annotation>
						<xs:documentation>Describes a run configuration, which overrides the main configuration for the specified runs. (optional)</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
</xs:schema>
