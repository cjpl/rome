////////////////////////////////////////////////////////////////////////////////
//                                                                            //
// SBSHTPrintADCValues                                                        //
//                                                                            //
// Begin_Html                                                                 //
//                                                                            //
// Description:                                                               //
// <p>                                                                        //
//                                                                            //
//                                                                            //
// <p>                                                                        //
// Usage:                                                                     //
// <p>                                                                        //
//                                                                            //
//                                                                            //
// <p>                                                                        //
// Status:                                                                    //
// <p>                                                                        //
//                                                                            //
//                                                                            //
// <p>                                                                        //
// To Do:                                                                     //
// <p>                                                                        //
//                                                                            //
//                                                                            //
// <p>                                                                        //
// Known Problems:                                                            //
// <p>                                                                        //
//                                                                            //
//                                                                            //
// <p>                                                                        //
// End_Html                                                                   //
//                                                                            //
// The event methods have been written by .                                   //
//                                                                            //
// Please note: The following information is only correct after executing     //
// the ROMEBuilder.                                                           //
//                                                                            //
// This task accesses the following folders :                                 //
//                                                                            //
// This task contains the following histgrams :                               //
//    ADC                                                                     //
//                                                                            //
// The histograms are created and saved automaticaly by the task.             //
//                                                                            //
// The following method can be used to get a handle of the histogram :        //
//                                                                            //
// Get<Histogram Name>()                                                      //
//                                                                            //
// For histogram arrays use :                                                 //
//                                                                            //
// Get<Histogram Name>At(Int_t index)                                         //
//                                                                            //
// Followings are include files of folders. ROMEBuilder will update it with   //
// reading this source code when it is executed next time.                    //
#include "generated/SBSHPMTData.h"
#include "generated/SBSHGlobalSteering.h"
//                                                                            //
////////////////////////////////////////////////////////////////////////////////
/*  This header was generated by ROMEBuilder. Manual changes above the        *
 * following line will be lost next time ROMEBuilder is executed.             */
/////////////////////////////////////----///////////////////////////////////////
#include "generated/SBSHAnalyzer.h"

#include <include/tasks/SBSHTPrintADCValues.h>
#include <TRandom.h>
#include <Riostream.h>
#include "TF1.h" 

Double_t lognormal(Double_t *x, Double_t *par) {
   Double_t x2 = x[0]-par[3];
   Double_t sigma = par[0];
   Double_t theta = par[1];
   Double_t m = par[2];
   if ((x2<theta) || (sigma<=0) || (m<=0)) {
      cerr<<"Error in lognormal: illegal parameter values"<<endl;
      return 0;
   }
   Double_t templog2 = TMath::Log((x2-theta)/m)*TMath::Log((x2-theta)/m);
   Double_t temp1 = TMath::Exp(-templog2/(2*sigma*sigma));
   Double_t temp2 = (x2-theta)*sigma*TMath::Sqrt(2*TMath::Pi());

   return temp1/temp2;
} 

ClassImp(SBSHTPrintADCValues)

void SBSHTPrintADCValues::Init()
{
}

void SBSHTPrintADCValues::BeginOfRun()
{
}

void SBSHTPrintADCValues::Event()
{
   gAnalyzer->GetPMTData()->SetADC((int)gRandom->Gaus(50,10));
   GetADC()->Fill(gAnalyzer->GetPMTData()->GetADC());

   if (gAnalyzer->GetGSP()->GetOutputOnOff()) {
      cout << gAnalyzer->GetPMTData()->GetADC() << endl;
      cout << endl;
   }
}

void SBSHTPrintADCValues::EndOfRun()
{
   TF1 *fitFcn = new TF1("fitFcn",lognormal,0,1,4); 

   fitFcn->SetParameters(0.001, 0, 1, 0); 
   fitFcn->SetParName(0, "sigma"); 
   fitFcn->SetParName(1, "theta"); 
   fitFcn->SetParName(2, "m"); 
   fitFcn->SetParName(3, "x_offset"); 

   GetADC()->Fit(fitFcn,"r"); 
   Double_t par[4]; 
   fitFcn->GetParameters(par); 

}

void SBSHTPrintADCValues::Terminate()
{
}

