//// Author: 
////////////////////////////////////////////////////////////////////////////////
//                                                                            //
// XYZTFillHistoAndFolder                                                     //
//                                                                            //
// 
// 
// This header has been generated by the ROMEBuilder.
// The event methods have been written by .
// 
// Please note: The following information is only correct after executing the
//              ROMEBuilder.
// 
// This task accesses the following folders :
//    GaussData
// 
// This task contains the following histgrams :
//    Histo1
//
// The histograms are created and saved automaticaly by the task.
//
// The following method can be used to fill a histogram :
//
// Fill<Histogram Name>(double value,double weight)
//
// For histogram arrays use :
//
// Fill<Histogram Name>At(int index,double value,double weight)
//
// If more histogram functions are needed use the following function the get
// a handle to the histogram and use the root functions.
//
// Get<Histogram Name>()
//
// For histogram arrays use :
//
// Get<Histogram Name>At(int index)
//                                                                            //
/////////////////////////////////////----///////////////////////////////////////

#include "include/generated/XYZTFillHistoAndFolder.h"
#include <TRandom.h>
#include "Riostream.h"

ClassImp(XYZTFillHistoAndFolder)

void XYZTFillHistoAndFolder::Init()
{
}

void XYZTFillHistoAndFolder::BeginOfRun()
{
   gAnalyzer->GetGaussData()->SetBinSize(200);
}

void XYZTFillHistoAndFolder::Event()
{
   double value = gRandom->Gaus(0,20);
   gAnalyzer->GetHisto1()->Fill(value);
   int ivalue = (int)(value+100);
   if (ivalue>=0 && ivalue<200)
      gAnalyzer->GetGaussData()->SetBinAt(ivalue,gAnalyzer->GetGaussData()->GetBinAt(ivalue)+1);
}

void XYZTFillHistoAndFolder::EndOfRun()
{
}

void XYZTFillHistoAndFolder::Terminate()
{
}

