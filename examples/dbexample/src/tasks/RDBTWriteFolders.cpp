// Author: Ryu Sawada

////////////////////////////////////////////////////////////////////////////////
//                                                                            //
// RDBTWriteFolders                                                           //
//                                                                            //
// Begin_Html                                                                 //
//                                                                            //
// Description:                                                               //
// <p>                                                                        //
// This is an example to write database.                                      //
//                                                                            //
// <p>                                                                        //
// Usage:                                                                     //
// <p>                                                                        //
//                                                                            //
//                                                                            //
// <p>                                                                        //
// Status:                                                                    //
// <p>                                                                        //
//                                                                            //
//                                                                            //
// <p>                                                                        //
// To Do:                                                                     //
// <p>                                                                        //
//                                                                            //
//                                                                            //
// <p>                                                                        //
// Known Problems:                                                            //
// <p>                                                                        //
//                                                                            //
//                                                                            //
// <p>                                                                        //
// End_Html                                                                   //
//                                                                            //
// The event methods have been written by Ryu Sawada.                         //
//                                                                            //
//                                                                            //
////////////////////////////////////////////////////////////////////////////////
/*  This header was generated by ROMEBuilder. Manual changes above the        *
 * following line will be lost next time ROMEBuilder is executed.             */
/////////////////////////////////////----///////////////////////////////////////

#include "generated/RDBAnalyzer.h"
#include "tasks/RDBTWriteFolders.h"
#include "ROMEiostream.h"

ClassImp(RDBTWriteFolders)

void RDBTWriteFolders::Init()
{
}

void RDBTWriteFolders::BeginOfRun()
{
}

void RDBTWriteFolders::Event()
{
}

void RDBTWriteFolders::EndOfRun()
{
   Int_t i;

   // search SQL or XML database
   ROMEDataBase *db = 0;
   for (i = 0; i < gAnalyzer->GetNumberOfDataBases(); i++) {
      if (!strcmp(gAnalyzer->GetDataBase(i)->GetType(), "sql")
         || !strcmp(gAnalyzer->GetDataBase(i)->GetType(), "xml")) {
         db = gAnalyzer->GetDataBase(i);
         break;
      }
   }
   if (!db) { // database was not found.
      Error("EndOfRun", "No SQL or XML database was found.");
      return;
   }

   ROMEString value;
   ROMEStr2DArray *values = new ROMEStr2DArray;               // data to be written in database
   ROMEString path;                                           // database path
   Long64_t runNumber = gAnalyzer->GetCurrentRunNumber();     // run number  is an arguments of ROMEDataBase::Write
   Long64_t eventNumber = gAnalyzer->GetCurrentEventNumber(); // event number is an arguments of ROMEDataBase::Write

   Int_t idForWriting = static_cast<Int_t>(runNumber + 1000); // id number to be written in database. This is just an example, you can use whatever you like.

   //
   // Write single value
   //
   path.SetFormatted("/BBB[id=%d]/bbb", idForWriting); // Add a row in table BBB and write bbb.
   value.SetFormatted("%d", 3);                       // value of BBB.bbb is 3 (this is just an example)
   values->SetAt(value, 0, 0);                        // fill value container to be passed to ROMEDataBase::Write
   db->Write(values, path.Data(), runNumber, eventNumber); // write database


   //
   // Write array
   //
   path.SetFormatted("/CCC(0,%d)[id=%d]/ccc", 9, idForWriting); // add ten rows. id=(run number + 1000) and idx is 0 to 9.
   for (i = 0; i < 10; i++) { // loop to set value to be written
      value.SetFormatted("ccc-%d-%d", idForWriting, i);
      values->SetAt(value, i, 0);
   }
   db->Write(values, path.Data(), runNumber); // write database

   delete values;
}

void RDBTWriteFolders::Terminate()
{
}

