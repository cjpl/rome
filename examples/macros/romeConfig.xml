<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- $Id$ -->

<!-- Please check ROME homepage for details of tags
http://midas.psi.ch/rome/romeConfigSchemaDocumentation.htm -->

<Configuration xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="">
  <ProgramConfiguration>
    <!-- The program mode. Must be one of the following : 0 : analyzer; 1 : monitor; 2 : analyzer and monitor; 3 : monitor connected to an analyzer. (required) -->
    <ProgramMode>0</ProgramMode>
  </ProgramConfiguration>

  <MainConfiguration>
    <Modes>
      <!-- Description of the modes in which the framework can run. -->
      <!-- Describes the analyzing mode. This can be 'online' or 'offline'. Default is offline -->
      <AnalyzingMode>offline</AnalyzingMode>
      <!-- Describes the DAQ system used for IO. This can be 'none', 'midas', 'root' or a user defined DAQ system. Default is none. -->
      <DAQSystem>dummy</DAQSystem>
    </Modes>

    <Offline>
      <!-- Description of the offline specific configuration. -->
      <!-- The run numbers of runs, which have to be analyzed. The following syntax must be used : 1,3-5,7,9-12. All runs must be specified in the 'MainConfiguration' even if they are overriden by a 'RunConfiguration'. (required for offline) -->
      <RunNumbers>1</RunNumbers>
      <!-- The event numbers, which have to be analyzed. Use the same syntax as for the run numbers. (optional) -->
      <EventNumbers>0-9</EventNumbers>
      <!-- The input file names containing the runs, which have to be analyzed. If no input file is specified the DAQ systems will work with a run number based file IO. All files must be specified in the 'MainConfiguration' even if they are overriden by a 'RunConfiguration'. (optional) -->
      <InputFileNames></InputFileNames>
    </Offline>

    <Online>
      <!-- Description of the online specific configuration. -->
      <!-- The name of the host of the online experiment. (required) -->
      <Host></Host>
      <!-- The name of the online experiment. (required) -->
      <Experiment></Experiment>
      <!-- The name of the analyzer in the midas environment. Can be used to run two analyzer in parallel. (optional) -->
      <AnalyzerName>MCRAnalyzer</AnalyzerName>
      <!-- The name of the memory buffer to be accessed. (optional) -->
      <MemoryBuffer>SYSTEM</MemoryBuffer>
    </Online>

    <Paths>
      <!-- Description of the file paths the framework is using. -->
      <!-- The path of all input files. (required) -->
      <InputFilePath>./</InputFilePath>
      <!-- The path of all output files. (optional) -->
      <OutputFilePath>./</OutputFilePath>
      <!-- Specify option to open output files for trees and histograms. This should be RECREATE, UPDATE or NUMBERED. When this is NUMBERED, the program will create a new file with appending a number at the end of file name, when it finds existing file. (optional) -->
      <OutputFileOption>RECREATE</OutputFileOption>
      <!-- Make file system directories for output files. -->
      <MakeOutputDirectory>false</MakeOutputDirectory>
    </Paths>

    <Common>
      <!-- Describes the framework specifications, which are common for analyzer and monitors. -->
      <Settings>
        <!-- Description of the common settings of the framework. -->
        <!-- Specify amount of messages from framework. mute, error, warning, normal, verbose or debug. default is normal. -->
        <VerboseLevel>normal</VerboseLevel>
        <!-- Specify max number of prints of an identical error or warning by ROMEPrint::Report. No limit when this is 0. -->
        <ReportMaxCount>20</ReportMaxCount>
        <!-- Amount of comments in configuration xml file. 0 to 5. You have more comments when this is larger. degault is 1. -->
        <ConfigCommentLevel>5</ConfigCommentLevel>
        <!-- If true, the program doesn't start a root session at the end. Default is false. -->
        <QuitMode>true</QuitMode>
        <!-- Program shows a splash screen, when starting up. Default is true. -->
        <ShowSplashScreen>true</ShowSplashScreen>
        <!-- Configuration file can be modified in a GUI at start up. -->
        <GraphicalConfigEdit>false</GraphicalConfigEdit>
        <!-- Flag if configuration XML file is overwritten by program. When this is true, program does not overwrite configuration file. -->
        <PreserveConfig>false</PreserveConfig>
      </Settings>

      <FloatingPointExceptionTrap>
        <!-- Description of the settings of floating point exception trap. -->
        <!-- If true, trap invalid operation. (NaNS, INF-INF, INF/INF, 0/0, INF*0, sqrt(Negative) and so on) -->
        <Invalid>false</Invalid>
        <!-- If true, trap division by zero. -->
        <DivByZero>false</DivByZero>
        <!-- If true, trap overflow. -->
        <Overflow>false</Overflow>
        <!-- If true, trap underflow. -->
        <Underflow>false</Underflow>
        <!-- If true, trap inexact operations. -->
        <Inexact>false</Inexact>
      </FloatingPointExceptionTrap>

      <SocketServer>
        <!-- Description of the socket server. External programs can access the objects inside the framework over a root socket interface. -->
        <!-- The socket server is per default not available. This flag activates it. Default is false. -->
        <Active>false</Active>
        <!-- The number of the port for the socket server. Default is 9090. -->
        <PortNumber>9090</PortNumber>
      </SocketServer>

      <DataBases/>

      <Trees>
        <Accumulate>false</Accumulate>
        <Tree>
          <TreeName>DataTree</TreeName>
          <!-- Trees can be read into the framework to start the analysis from a previously saved state. Default is false. -->
          <Read>false</Read>
          <!-- Trees are written to disc. Default is false. -->
          <Write>true</Write>
          <!-- Trees are filled. It will be changed to true when 'Write' is true. Default is false. -->
          <Fill>true</Fill>
          <!-- Compression level for all branches of the tree. Default is 0. -->
          <CompressionLevel>1</CompressionLevel>
          <!-- Number of bytes for auto saving. Auto saving is disabled when this is 0. Default is 100000000 (about 100 MB). -->
          <AutoSaveSize>100000000</AutoSaveSize>
          <!-- If this value is greater than 0 the tree is a circular tree with the specified size. Default is 0. -->
          <MaxNumberOfEntries>0</MaxNumberOfEntries>
          <!-- The name of the trees input file. This value overwrites the value specified in the definition file. (optional) -->
          <TreeInputFileName></TreeInputFileName>
          <!-- The name of the trees output file. This value overwrites the value specified in the definition file. (optional) -->
          <TreeOutputFileName></TreeOutputFileName>
          <!-- If this is true, content of configuration XML file will be saved in the output file. Default is false -->
          <SaveConfiguration>false</SaveConfiguration>
          <Branch>
            <!-- Description of a branch. -->
            <BranchName>pmt</BranchName>
            <!-- Inactive branches are not filled by the framework. (optional) -->
            <Active>true</Active>
          </Branch>
          <Branch>
            <!-- Description of a branch. -->
            <BranchName>sum</BranchName>
            <!-- Inactive branches are not filled by the framework. (optional) -->
            <Active>true</Active>
          </Branch>
        </Tree>
      </Trees>
    </Common>

    <Analyzer>
      <!-- Describes the framework specifications, which are used for an analyzer. -->
      <HistogramRead>
        <!-- Description of the histogram/graph reading. -->
        <!-- Read flag. (required) -->
        <Read>false</Read>
        <!-- Run numbers of the required histogram/graph file. (required) -->
        <RunNumber>0</RunNumber>
        <!-- directory path to read histogram/graph file. When this is empty, global input path is used.(optional) -->
        <Path></Path>
        <!-- The name of the histogram input file. (optional) -->
        <FileName></FileName>
      </HistogramRead>

      <HistogramWrite>
        <!-- Description of the histogram/graph writing. -->
        <!-- Write flag. (required) -->
        <Write>true</Write>
        <!-- directory path to write histogram/graph file. When this is empty global output path is used.(optional) -->
        <Path></Path>
        <!-- The name of the histogram output file. (e.g. histos#.root, # will be replaced by run number) (optional) -->
        <FileName></FileName>
        <!-- If this value is true all the histograms and graphs are not reset by framework. Default is false. -->
        <AccumulateAll>false</AccumulateAll>
        <!-- If this value is true all the histograms and graphs are deactivated. Default is false. -->
        <DeactivateAll>false</DeactivateAll>
        <AutoSavePeriod>0</AutoSavePeriod>
      </HistogramWrite>

      <Macros>
        <!-- Description of macros. -->
        <!-- Macro file name which is executed at the begin of run. It is executed after Tasks::BeginOfRun. (optional) -->
        <BeginOfRun>bor.C</BeginOfRun>
        <!-- Macro file name which is executed at the begin of event. It is executed before Tasks::Event. (optional) -->
        <BeginOfEvent>boe.C</BeginOfEvent>
        <!-- Macro file name which is executed at the end of event. It is executed after Tasks::Event. (optional) -->
        <EndOfEvent>eoe.C</EndOfEvent>
        <!-- Macro file name which is executed at the end of run. It is executed after Tasks::EndOfRun. (optional) -->
        <EndOfRun>eor.C</EndOfRun>
      </Macros>

      <Tasks>
        <Task>
          <TaskName>TakingSum</TaskName>
          <!-- Inactive tasks are not executed by the framework. Default is true. -->
          <Active>true</Active>
        </Task>
      </Tasks>
    </Analyzer>

    <Monitor>
      <!-- Describes the framework specifications, which are used for a monitor. -->
      <SocketClient>
        <!-- Description of the socket client connection to the ROME analyzer. This section is needed if the program mode is 3. -->
        <!-- Host which runs the ROME analyzer. -->
        <Host>localhost</Host>
        <!-- Port number for the socket connection. -->
        <Port>9090</Port>
      </SocketClient>
    </Monitor>
  </MainConfiguration>
</Configuration>
