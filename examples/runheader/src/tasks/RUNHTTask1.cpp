////////////////////////////////////////////////////////////////////////////////
//                                                                            //
// RUNHTTask1                                                                 //
//                                                                            //
//                                                                            //
//                                                                            //
// The event methods have been written by .                                   //
//                                                                            //
// Please note: The following information is only correct after executing     //
// the ROMEBuilder.                                                           //
//                                                                            //
// This task accesses the following folders :                                 //
//                                                                            //
//                                                                            //
// Followings are include files of folders. ROMEBuilder will update it with   //
// reading this source code when it is executed next time.                    //
#include "generated/RUNHRunHeader.h"
#include "generated/RUNHEventData.h"
//                                                                            //
////////////////////////////////////////////////////////////////////////////////
/*  This header was generated by ROMEBuilder. Manual changes above the        *
 * following line will be lost next time ROMEBuilder is executed.             */
/////////////////////////////////////----///////////////////////////////////////
#include "generated/RUNHAnalyzer.h"

#include "include/tasks/RUNHTTask1.h"
#include "Riostream.h"
#include "TRandom.h"

ClassImp(RUNHTTask1)

void RUNHTTask1::Init()
{
}

void RUNHTTask1::BeginOfRun()
{
   // write run header
   if (!strcmp(gAnalyzer->GetActiveDAQ()->GetName(), "none")) {
      gAnalyzer->GetDataTreeFile()->cd();
      gAnalyzer->GetRunHeader()->SetTriggerType(gAnalyzer->GetGSP()->GetTriggerType());
      gAnalyzer->GetRunHeader()->Write();
      cout<<"Trigger type is "<<gAnalyzer->GetRunHeader()->GetTriggerType()<<"."<<endl;
   }

   // read run header
   if (!strcmp(gAnalyzer->GetActiveDAQ()->GetName(), "rome")) {
      RUNHRunHeader *a 
         = static_cast<RUNHRunHeader*>(static_cast<RUNHRomeDAQ*>(gAnalyzer->GetActiveDAQ())
                                       ->GetDataTreeFile()->FindObjectAny("RUNHRunHeader"));
      gAnalyzer->GetRunHeader()->SetTriggerType(a->GetTriggerType());
      cout<<"Trigger type is "<<gAnalyzer->GetRunHeader()->GetTriggerType()<<"."<<endl;
   }
}

void RUNHTTask1::Event()
{
   // write ADC value
   gAnalyzer->GetEventData()->SetADC(static_cast<Int_t>(gRandom->Gaus(2000,100)));
}

void RUNHTTask1::EndOfRun()
{
}

void RUNHTTask1::Terminate()
{
}

